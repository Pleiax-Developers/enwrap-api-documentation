openapi: "3.0.1"
info:
  title: "Enwrap API Documentation"
  version: "1.0.0"
servers:
- url: "https://ensmp3tuff.execute-api.eu-west-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "dev"
tags:
- name: "Active billing"
  description: "Work with the active billings"
- name: "Companies registry"
  description: "Work with the companies registries"
- name: "Sales opportunity"
  description: "Work with the sales opportunities"
- name: "Employees registry"
  description: "Work with the employees registry"
- name: "Companies contacts"
  description: "Work with the companies contacts"
- name: "Production monitoring"
  description: "Work with the production monitoring"
paths:
  /activebilling:
    get:
      tags:
      - "Active billing"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveBilling"
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-fatturazione-attiva/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Active billing" 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActiveBilling"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-fatturazione-attiva/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /companiesregistry:
    get:
      tags:
      - "Companies registry"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyRegistry"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Companies registry"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyRegistry"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /salesopportunities:
    get:
      tags:
      - "Sales opportunity"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOpportunity"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-opportunita-sales/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Sales opportunity"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesOpportunity"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-opportunita-sales/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /employeesregistry/{id}:
    get:
      tags:
      - "Employees registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeesRegistry"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-anagrafica-dipendenti/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      tags:
      - "Employees registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:DELETE-anagrafica-dipendenti/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      tags:
      - "Employees registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:PATCH-anagrafica-dipendenti/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /companiescontacts/{id}:
    get:
      tags:
      - "Companies contacts"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-contatti-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      tags:
      - "Companies contacts"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:DELETE-contatti-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      tags:
      - "Companies contacts"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:PATCH-contatti-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /companiescontacts:
    get:
      tags:
      - "Companies contacts"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-contatti-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Companies contacts"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyContact"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-contatti-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /companiesregistry/{id}:
    get:
      tags:
      - "Companies registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyRegistry"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      tags:
      - "Companies registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:DELETE-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      tags:
      - "Companies registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:PATCH-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /companiesregistry/{id}/companycontacts:
    get:
      tags:
      - "Companies registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyContact"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-CompanyContact-FROM-Company/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  
  /employeesregistry/{id}/assignedopportunity:
    get:
      tags:
      - "Employees registry"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOpportunity"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-Employee-AssignedOpportunity/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
        
  /salesopportunities/{id}:
    get:
      tags:
      - "Sales opportunity"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOpportunity"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-opportunita-sales/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      tags:
      - "Sales opportunity"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:DELETE-opportunita-sales/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      tags:
      - "Sales opportunity"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:PATCH-opportunita-sales/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /activebilling/{id}:
    get:
      tags:
      - "Active billing"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveBilling"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-fatturazione-attiva/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      tags:
      - "Active billing"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:DELETE-fatturazione-attiva/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      tags:
      - "Active billing"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:PATCH-fatturazione-attiva/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /employeesregistry:
    get:
      tags:
      - "Employees registry"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeesRegistry"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-anagrafica-dipendenti/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Employees registry"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-anagrafica-dipendenti/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /productionmonitoring:
    get:
      tags:
      - "Production monitoring"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductionMonitoring"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GET-Production-Monitoring/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      tags:
      - "Production monitoring"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductionMonitoring"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:POST-production-monitoring/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /productionmonitoring/{id}:
    get:
      tags:
      - "Production monitoring"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductionMonitoringDashboard"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:773602347396:function:GetById-anagrafica-aziende/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"

      
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
    CompanyContact:
      type: "object"
      required:
      - "name"
      - "surname"
      - "role"
      - "company"
      - "phone"
      - "email"
      properties:
        name:
          type: "string"
          example: "John"
        surname: 
          type: "string"
          example: "Doe"
        role: 
          type: "string"
          example: "Test account"
        company:
          type: "integer"
          format: "int32"
        phone: 
          type: "string"
          example: "+39 3333333333"
      xml:
        name: "CompanyContact" 
    CompanyRegistry:
      type: "object"
      required:
      - "BusinessName"
      - "PIVA"
      - "ATECO"
      - "ATECODescription"
      - "CF"
      - "RegisteredOfficeAddress"
      - "RegisteredOfficeCAP"
      - "RegisteredOfficeCity"
      - "RegisteredOfficeProvince"
      - "RegisteredOfficeRegion"
      - "OperationalHeadquartersAddress"
      - "OperationalHeadquartersCAP"
      - "OperationalHeadquartersCity"
      - "OperationalHeadquartersProvince"
      - "OperationalHeadquartersRegion"
      - "Phone"
      - "Email"
      - "PEC"
      - "SDI"
      - "Website"
      - "EmployeesNumber"
      - "Revenues"
      - "MOL"
      - "EBITDA"
      - "ClientLead"
      - "SupplierLead"
      - "Contacts"
      properties:
        BusinessName:
          type: "string"
          example: "Test Company"
        PIVA: 
          type: "string"
          example: "86334519757"
        ATECO: 
          type: "string"
          example: "A 01.11.10"
        ATECODescription:
          type: "string"
          format: "Description"
        CF: 
          type: "string"
          example: "CTTLTST06H401O"
        RegisteredOfficeAddress:
          type: "string"
          format: "Via prova, 21"
        RegisteredOfficeCAP:
          type: "string"
          format: "00157"
        RegisteredOfficeCity:
          type: "string"
          format: "Rome"
        RegisteredOfficeProvince:
          type: "string"
          format: "RM"
        RegisteredOfficeRegion:
          type: "string"
          format: "Lazio"
        OperationalHeadquartersAddress:
          type: "string"
          format: "Via prova, 55"
        OperationalHeadquartersCAP:
          type: "string"
          format: "00157"
        OperationalHeadquartersCity:
          type: "string"
          format: "Rome"
        OperationalHeadquartersProvince:
          type: "string"
          format: "RM"
        OperationalHeadquartersRegion:
          type: "string"
          format: "Lazio"
        Phone:
          type: "string"
          example: "+39 3333333333"
        Email:
          type: "string"
          example: "test@company.com"
        PEC:
          type: "string"
          example: "pec@company.com"
        SDI:
          type: "integer"
          example: "49587"
        Website:
          type: "string"
          example: "www.testcompany.com"
        EmployeesNumber:
          type: "integer"
          example: 50
        Revenues:
          type: "string"
          example: "100.000$"
        MOL:
          type: "integer"
          example: 60
        EBITDA:
          type: "integer"
          example: 180
        ClientLead:
          type: "string"
          example: "Client Lead"
        SupplierLead:
          type: "string"
          example: "Supplier lead"
        Contacts:
          type: "integer"
          example: 9
      xml:
        name: "CompanyRegistry" 
        
    ActiveBilling:
      type: "object"
      required:
      - "Order"
      - "Client"
      - "BillingDate"
      properties:
        Order:
          type: "integer"
          example: 3
        Client: 
          type: "integer"
          example: 21
        BillingDate: 
          type: "string"
          example: "2021-11-12T14:32:48.000Z"
      xml:
        name: "ActiveBilling" 
    
    SalesOpportunity:
      type: "object"
      required:
      - "Name"
      - "Status"
      - "AssignedEmployee"
      - "Company"
      - "Contacts"
      - "ManagementStartDate"
      - "Attachement"
      - "EstimateNumber"
      - "Order"
      - "PackagingRequest"
      - "FinalSellingPrice"
      - "EstimateConfirmation"
      - "DeliveryDate"
      - "Billing"
      properties:
        Name: 
          type: "string"
          example: "Name"
        Status: 
          type: "string"
          example: "First Contact"
        AssignedEmployee: 
          type: "integer"
          example: 6
        Company: 
          type: "integer"
          example: 20
        ManagementStartDate: 
          type: "string"
          example: "2021-10-29T14:19:40.809Z"
        Attachement: 
          type: "string"
          example: "Test Attachement"
        EstimateNumber: 
          type: "integer"
          example: 200
        Order: 
          type: "string"
          example: "Order"
        PackagingRequest: 
          type: "string"
          example: "Request"
        FinalSellingPrice: 
          type: "string"
          example: "200$"
        EstimateConfirmation: 
          type: "string"
          example: "Confirmation"
        DeliveryDate: 
          type: "string"
          example: "2021-10-29T14:19:40.809Z"
        Billing: 
          type: "string"
          example: "Billing"
      xml:
        name: "SalesOpportunity" 
    EmployeesRegistry:
      type: "object"
      properties:
        Id:
          type: "integer"
        SubId:
          type: "string"
        CreatedAt: 
          type: "string"
          format: "date-time"
        UpdatedAt: 
          type: "string"
          format: "date-time"
        Name: 
          type: "string"
        Surname: 
          type: "string"
        BirthDate: 
          type: "string"
          format: "date-time"
        BirthCity: 
          type: "string"
        CF: 
          type: "string"
        Role: 
          type: "string"
        Phone: 
          type: "string"
        Email: 
          type: "string"
        Department: 
          type: "string"
        Residence: 
          type: "string"
        ResidenceCity: 
          type: "string"
        ResidenceProvince: 
          type: "string"
        EmploymentDate: 
          type: "string"
          format: "date-time"
        ContractType: 
          type: "string"
      xml:
        name: "EmployeesRegistry" 
        
    ProductionMonitoringDashboard:
      type: "object"
      properties:
        baseParam:
          type: "string"
        totalCmProduced:
          type: "number"
        totalProductionHrs:
          type: "string"
        unitsProducedByType:
          type: "object"
          properties:
            base:
              type: "integer"
            cassa:
              type: "integer"
            gabbia:
              type: "integer"
            selle:
              type: "integer"
            fissaggi:
              type: "integer"
            dischi:
              type: "integer"
            tamponatura:
              type: "integer"
        productionCmByType:
          type: "object"
          properties:
            base:
              type: "number"
            cassa:
              type: "number"
            gabbia:
              type: "number"
            selle:
              type: "number"
            fissaggi:
              type: "number"
            dischi:
              type: "number"
            tamponatura:
              type: "number"
        productionHrsByType:
          type: "object"
          properties:
            base:
              type: "string"
            cassa:
              type: "string"
            gabbia:
              type: "string"
            selle:
              type: "string"
            fissaggi:
              type: "string"
            dischi:
              type: "string"
            tamponatura:
              type: "string"
      xml:
        name: "ProductionMonitoringDashboard" 
        
    ProductionMonitoring:
      type: "object"
      properties:
        id:
          type: "integer"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        Opportunity:
          type: "integer"
        ProductonStartDate:
          type: "string"
          format: "date-time"
        ProductonEndDate:
          type: "string"
          format: "date-time"
        DeliveryDate:
          type: "string"
          format: "date-time"
        DeliveryDelayDays:
          type: "integer"
        Fitok:
          type: "string"
        DDT:
          type: "string"
        PackingType:
          type: "string"
        Material:
          type: "string"
        Length:
          type: "integer"
        Width:
          type: "integer"
        Height:
          type: "integer"
        ASS:
          type: "string"
        TareCad:
          type: "integer"
        NetCad:
          type: "integer"
        GrossCad:
          type: "integer"
        Qty:
          type: "integer"                 
        SingleFirSqm:
          type: "number"
        SinglePlywoodSqm:
          type: "number"
        SingleOSBSqm:
          type: "number"
        TotalWoodSqm:
          type: "number"
        TarPaper:
          type: "string"
        BarrierBag:
          type: "string"
        BoltY:
          type: "boolean"
        SaltsUnits:
          type: "boolean"
        HumidityIndicatorsQty:
          type: "number"
        VciY:
          type: "boolean"
        Bolts:
          type: "number"
        PreservationSpongeQty:
          type: "integer"
        GridsY:
          type: "boolean"
        InspectionDoorQty:
          type: "integer"
        Polyethylene:
          type: "string"
        ShockIndicatorPresence:
          type: "string"
        Screws:
          type: "integer"
        Nails:
          type: "integer"
        Base:
          type: "boolean"
        Riv:
          type: "boolean"
        Fix:
          type: "boolean"
        ToTheGround:
          type: "boolean"
        TotalFirCm:
          type: "number"
        TotalPlywoodCm:
          type: "number"
        TotalOsbCm:
          type: "number"
        TotalVEPackingCm:
          type: "number"
        TotalPackingCm:
          type: "number"
        MqsePackingCm:
          type: "number"
        MqsePackingtot:
          type: "number"
        CadBaseSqm:
          type: "number"
        TotalBaseSqm:
          type: "number"
        TarPaperCadSqm:
          type: "number"
        TotalTarPaperSqm:
          type: "number"
        SbCadSm:
          type: "number"
        TotalSbSqm:
          type: "number"
        BoltCadSqm:
          type: "number"
        TotalBoltSqm:
          type: "number"
        VciCadSqm:
          type: "number"
        TotalVciCad:
          type: "number"
        PolyethyleneCadSqm:
          type: "number"
        TotalPolyethyleneSqm:
          type: "number"
        AkilusCadSqm:
          type: "number"
        AssParameter:
          type: "string"
      xml:
        name: "ProductionMonitoring"
